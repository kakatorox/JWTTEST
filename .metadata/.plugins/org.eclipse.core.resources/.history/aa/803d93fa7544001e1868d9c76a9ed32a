package com.pj.nttdata1.controller;

import java.util.HashMap;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.ResponseEntity;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.pj.nttdata1.request.LoginRequest;
import com.pj.nttdata1.request.RegisterRequest;
import com.pj.nttdata1.response.AuthResponse;
import com.pj.nttdata1.service.AuthService;

import lombok.RequiredArgsConstructor;


@RestController
@RequestMapping("/auth/")
@RequiredArgsConstructor
public class AuthController {
	private static final Logger logger = LoggerFactory.getLogger(AuthController.class);

	private final AuthService authService;
	
	@PostMapping(value = "login")
	public ResponseEntity<AuthResponse> login(@RequestBody LoginRequest request) {
		
		
		
		
		return ResponseEntity.ok(authService.login(request));
	}
	
	@PostMapping(value = "register")
	public ResponseEntity<AuthResponse> register(@RequestBody RegisterRequest request) {
	
		
		return ResponseEntity.ok(authService.register(request));
	}
	
	@GetMapping(value = "hola")
	public ResponseEntity<?> hola() {
		logger.info("Obteniendo usuario");
		
		var auth = SecurityContextHolder.getContext().getAuthentication();
		logger.info("Obteniendo auth usuario:{}", auth.getPrincipal());
		logger.info("Obteniendo auth rol:{}", auth.getAuthorities());
		logger.info("Obteniendo auth credencial:{}", auth.getCredentials());
		logger.info("Obteniendo auth Autenticado:{}", auth.isAuthenticated());
		
		Map<String,String> mensaje = new HashMap<>();
		mensaje.put("Contenido", "hola desde Publicendpoint");
		return ResponseEntity.ok(mensaje);
	}
}
