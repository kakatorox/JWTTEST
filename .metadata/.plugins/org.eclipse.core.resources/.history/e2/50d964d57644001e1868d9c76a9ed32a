package com.pj.nttdata1.service;

import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.stereotype.Service;

import com.pj.nttdata1.controller.AuthController;
import com.pj.nttdata1.model.Rol;
import com.pj.nttdata1.model.Telefono;
import com.pj.nttdata1.model.Usuario;
import com.pj.nttdata1.repository.UsuarioRepository;
import com.pj.nttdata1.request.LoginRequest;
import com.pj.nttdata1.request.RegisterRequest;
import com.pj.nttdata1.response.AuthResponse;

import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class AuthService {
	private static final Logger logger = LoggerFactory.getLogger(AuthService.class);
	private final UsuarioRepository usuarioRepository;
	private final JwtService jwtService;
	private final AuthenticationManager authenticationManager;

	public AuthResponse login(LoginRequest request) {
		logger.info("ingrese");
		logger.info(request.getUser());
		logger.info(request.getPassword());
		authenticationManager.authenticate(new UsernamePasswordAuthenticationToken(request.getUser(), request.getPassword()));
        UserDetails user = usuarioRepository.findByUsername(request.getUser()).orElseThrow();
        String token = jwtService.getToken(user);
        return AuthResponse.builder()
            .token(token)
            .build();
	}

	public AuthResponse register(RegisterRequest request) {

		Usuario us = Usuario.builder()
		.username(request.getUser())
		.password(request.getPassword())
//		.telefonos(request.getTelefonos())
		.rol(Rol.USER)
		.build();
				
		usuarioRepository.save(us);
		
		return AuthResponse.builder()
				.token(jwtService.getToken(us))
				.build();
	}



}
